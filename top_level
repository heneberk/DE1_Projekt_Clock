

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;


-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity top_level is

port (

        
        CLK  : in    std_logic; 
        LED  : out   std_logic_vector(1 downto 0);             -- vystup alarm

        BTNC : in std_logic;
        BTNU : in std_logic;
        BTND : in std_logic;
        BTNL : in std_logic;
        BTNR : in std_logic;
        
        DISP1: out std_logic;
        DISP2: out std_logic;
        
        SW15: in std_logic;
        SW14: in std_logic;
        SW13: in std_logic  
    );


end entity top_level;



architecture Behavioral of top_level is
-----------------
component stopwatch is
    Port (
        clk          : in  STD_LOGIC;                        -- hlavní hodiny (100 MHz)
        rst          : in  STD_LOGIC;                        -- globální reset (nepovinné)
        sw2          : in  STD_LOGIC;                        -- switch 2 pro aktivaci režimu
        btn_center   : in  STD_LOGIC;                        -- tlačítko pro ovládání režimu
        seg_display  : out STD_LOGIC_VECTOR(23 downto 0)     -- výstup pro 6 číslic
    );
end component;
-----------------
component clk_1hz is
    Port ( clk_in : in STD_LOGIC;
           clk_out : out STD_LOGIC;
           rst : in STD_LOGIC);
end component;
-----------------
component clock is
    Port (
           clk : in STD_LOGIC;
           clk_1hz : in STD_LOGIC;
           set_sw : in STD_LOGIC;
           btn_right : in STD_LOGIC;
           btn_left : in STD_LOGIC;
           btn_up : in STD_LOGIC;
           btn_down : in STD_LOGIC;
           seconds : out STD_LOGIC_VECTOR (5 downto 0);
           minutes : out STD_LOGIC_VECTOR (5 downto 0);
           hours : out STD_LOGIC_VECTOR (4 downto 0)
     );
end component;
-----------------
component alarm_comparator is
    Port (
        current_hh  : in  STD_LOGIC_VECTOR(5 downto 0);
        current_mm  : in  STD_LOGIC_VECTOR(5 downto 0);
        alarm_hh    : in  STD_LOGIC_VECTOR(5 downto 0);
        alarm_mm    : in  STD_LOGIC_VECTOR(5 downto 0);
        alarm_on    : in  STD_LOGIC;
        alarm_match : out STD_LOGIC
    );
end component;
-----------------
component alarm_output is
    Port (
        clk         : in  STD_LOGIC;
        alarm_match : in  STD_LOGIC;
        buzzer_out  : out STD_LOGIC;
        led_alarm   : out STD_LOGIC
    );
end component;
-----------------
component alarm_register is
    Port (
        clk         : in  STD_LOGIC;
        rst         : in  STD_LOGIC;
        load_alarm  : in  STD_LOGIC; -- impuls pro na?tení hodnoty
        alarm_hh    : in  STD_LOGIC_VECTOR(5 downto 0);
        alarm_mm    : in  STD_LOGIC_VECTOR(5 downto 0);
        set_hh      : out STD_LOGIC_VECTOR(5 downto 0);
        set_mm      : out STD_LOGIC_VECTOR(5 downto 0)
    );
end component;
-----------------

begin



    -- hodinový generátor (1Hz)
    clk_divider_inst : clk_1hz
        port map (
            clk_in  => CLK,
            clk_out => clk_1hz_sig,
            rst     => BTNC
        );

    --  hodiny
    clock_inst : clock
        port map (
            clk        => CLK,
            clk_1hz    => clk_1hz_sig,
            set_sw     => SW15,
            btn_right  => BTNR,
            btn_left   => BTNL,
            btn_up     => BTNU,
            btn_down   => BTND,
            seconds    => seconds_sig,
            minutes    => minutes_sig,
            hours      => hours_sig
        );

    -- stopeky
    stopwatch_inst : stopwatch
        port map (
            clk         => CLK,
            rst         => BTNC,
            sw2         => SW14,
            btn_center  => BTNC,
            seg_display => seg_display_sig
        );

    -- registr pro alarm
    alarm_reg_inst : alarm_register
        port map (
            clk         => CLK,
            rst         => BTNC,
            load_alarm  => SW13,
            alarm_hh    => hours_sig,
            alarm_mm    => minutes_sig,
            set_hh      => alarm_hh_sig,
            set_mm      => alarm_mm_sig
        );

    -- porovnání alarmu
    alarm_comp_inst : alarm_comparator
        port map (
            current_hh  => ("00" & hours_sig),  -- rozšíření 5bit na 6bit
            current_mm  => minutes_sig,
            alarm_hh    => alarm_hh_sig,
            alarm_mm    => alarm_mm_sig,
            alarm_on    => SW13,
            alarm_match => alarm_match_sig
        );

    -- výstup alarmu
    alarm_output_inst : alarm_output
        port map (
            clk         => CLK,
            alarm_match => alarm_match_sig,
            buzzer_out  => buzzer_out_sig,
            led_alarm   => led_alarm_sig
        );

    -- Výstupy
    LED(0) <= buzzer_out_sig;
    LED(1) <= led_alarm_sig;

    -- Výstup na displeje 
    DISP1 <= seg_display_sig(0);  
    DISP2 <= seg_display_sig(1);


end Behavioral;
